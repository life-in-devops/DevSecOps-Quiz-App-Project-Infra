name: Pipeline for Cloud Infra Deployment

on:
  push:
    branches:
      - main
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
  workflow_dispatch:
    inputs:
      action:
        description: "Choose Terraform Action (plan/apply/destroy)"
        required: true
        default: "plan"
        type: choice
        options:
          - plan
          - apply
          - destroy    

jobs:
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION_NAME }}

      - name: Check AWS CLI version
        run: aws --version

      - name: Verify AWS CLI configuration
        run: |
          aws configure list
              echo "Checking AWS CLI version..."
              aws --version || (echo "AWS CLI not found" && exit 1)

      - name: Test AWS CLI connectivity
        run: |
          echo "Testing AWS CLI connectivity..."
          aws sts get-caller-identity --debug || (echo "Failed to connect to AWS" && exit 1)

      - name: Debug AWS CLI Authentication
        run: aws sts get-caller-identity --debug

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        id: fmt
        run: terraform fmt

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      # - name: Terraform Apply
      #   id: apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform apply --auto-approve

      - name: Terraform Destroy
        id: destroy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform destroy --auto-approve
